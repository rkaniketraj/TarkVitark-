import api from '../lib/axios';

/**
 * Service for handling debate-related API calls
 */
const debateService = {
  // Get list of active debates
  getActiveDebates: async () => {
    const response = await api.get('/debates/active');
    return response.data.data;
  },

  // Get list of upcoming debates
  getUpcomingDebates: async () => {
    const response = await api.get('/debates/upcoming');
    return response.data.data;
  },

  // Get details for a specific debate
  getDebateDetails: async (debateId) => {
    const response = await api.get(`/debates/${debateId}`);
    return response.data.data;
  },

  // Create a new debate
  createDebate: async (debateData) => {
    const response = await api.post('/debates/create', debateData);
    return response.data.data;
  },

  // Register for a debate
  registerForDebate: async (debateId, stance) => {
    const response = await api.post('/debates/register', {
      debateId,
      stance,
      agreedToRules: true
    });
    return response.data.data;
  },

  // Unregister from a debate
  unregisterFromDebate: async (debateId) => {
    const response = await api.post('/debates/unregister', { debateId });
    return response.data;
  },

  // Join an active debate
  joinDebate: async (debateId) => {
    const response = await api.post('/debates/join', { debateId });
    return response.data.data;
  },

  // Leave a debate
  leaveDebate: async (debateId) => {
    const response = await api.post('/debates/leave', { debateId });
    return response.data.data;
  },

  // Update debate status
  updateDebateStatus: async (debateId, status) => {
    const response = await api.patch('/debates/update-status', {
      debateId,
      status
    });
    return response.data.data;
  },

  // Vote on a debate
  voteOnDebate: async (debateId, stance) => {
    const response = await api.post(`/debates/${debateId}/vote`, { stance });
    return response.data.data;
  },

  // Get debate messages
  getMessages: async (debateId, page = 1, limit = 50) => {
    const response = await api.get(`/debates/${debateId}/messages`, {
      params: { page, limit }
    });
    return response.data.data;
  },

  // Send a message
  sendMessage: async (debateId, content, voiceUrl = null) => {
    const response = await api.post(`/debates/${debateId}/messages`, {
      content,
      voiceUrl
    });
    return response.data.data;
  },

  // Get user's hosted debates
  getHostedDebates: async () => {
    const response = await api.get('/debates/hosted');
    return response.data.data;
  },

  // Get user's participated debates
  getParticipatedDebates: async () => {
    const response = await api.get('/debates/participated');
    return response.data.data;
  },

  // Get debate statistics
  getDebateStats: async (debateId) => {
    const response = await api.get(`/debates/${debateId}/stats`);
    return response.data.data;
  },

  // Search debates
  searchDebates: async (query, filters = {}) => {
    const response = await api.get('/debates/search', {
      params: {
        q: query,
        ...filters
      }
    });
    return response.data.data;
  }
};

export default debateService;
